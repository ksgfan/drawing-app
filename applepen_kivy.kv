# File name: main.py
#: import FadeTransition kivy.uix.screenmanager.FadeTransition
#: import NoTransition kivy.uix.screenmanager.NoTransition
#: import CheckBox kivy.uix.checkbox

<CustLabel@Label>
    color: 0.5,0.5, 0.5, 1

<ColoredLabel@Label>:
    font_size: 40
    canvas.before:
        Color:
            rgba: 0.5,0.5, 0.5, 1
        Rectangle:
            pos: self.pos
            size: self.size

<ColoredCheckBox@CheckBox>
    font_size: 40
    canvas.before:
        Color:
            rgba: 0.5,0.5, 0.5, 1
        Rectangle:
            pos: self.pos
            size: self.size

#:set btn_color [0.5, 0.5, 0.5, 0.4]

ScreenManagement:
    transition: NoTransition()
    MainScreen:
        id: main 
    SecondScreen:
        id: drawing
    BetweenTrialScreen:
        id: between_trial
    
<MainScreen>:
    name: "main"
    #define global variables 
    username: username
    age: age
#    copy: copy
#    recall: recall
#    delayed: delayed
    gender_label: gender_label

    GridLayout:
        cols:1
        #organise the window
        size: root.width, root.height
        padding: [400,200,400,200] # 

         
        GridLayout:
            cols: 2
            
            ColoredLabel: 
                text: "ID: "
            TextInput:
                id: username
                multiline: False
                padding: [0, self.height / 3, 0, 0]
                font_size: 50
                hint_text: ""

            ColoredLabel:
                text: "Age: "
            TextInput:
                id: age
                multiline: False
                padding: [0, self.height / 3, 0, 0]
                font_size: 50

            ColoredLabel:
                id: gender_label
                text: "Gender:"

            GridLayout:
                cols: 2
                orientation: "lr-tb"

                ColoredLabel:
                    text: "Male"
                ColoredCheckBox:
                    group: "gender"
                    id: male
                    text: "Male"
                    on_active: app.gender = self.text

                ColoredLabel:
                    text: "Female"
                ColoredCheckBox:
                    group: "gender"
                    id: female
                    text: "Female"
                    on_active: app.gender = self.text

                ColoredLabel:
                    text: "Other"
                ColoredCheckBox:
                    group: "gender"
                    id: other
                    text: "Other"
                    on_active: app.gender = self.text

#            ColoredLabel:
#                text: "Test Type"
#
#            GridLayout:
#                cols: 2
#                orientation: "lr-tb"
#
#                ColoredLabel:
#                    text: "Copy"
#                ColoredCheckBox:
#                    group: "type"
#                    id: copy
#                    text: "Copy"
#                    on_active: app.t_type = self.text
#
#                ColoredLabel:
#                   text: "Recall"
#                ColoredCheckBox:
#                    group: "type"
#                    id: recall
#                    text: "Recall"
#                    on_active: app.t_type = self.text
#
#                ColoredLabel:
#                    text: "Delayed Recall"
#               ColoredCheckBox:
#                    group: "type"
#                   id: delayed
#                    text: "Delayed"
#                    on_active: app.t_type = self.text

        Button:
            font_size: 50
            size_hint: 0.5, 0.5
            text: "Continue"
            background_color : btn_color
            on_press: root.check_inputs()
            # on_release: app.root.current = "drawing"

        
        Button:
            font_size: 40
            size_hint: 0.1, 0.1
            text: "Stop App"
            background_color : btn_color
            on_press: app.stop()


<SecondScreen>:
    name: "drawing"

    my_spinner: my_spinner

    on_pre_enter:
        self.ids.drawing.filename = self.manager.ids.main.username.text
    on_pre_enter:
        self.ids.drawing.age = self.manager.ids.main.age.text
    on_pre_enter:
        app.filename = self.manager.ids.main.username.text



        
    #clean Screen  
    on_pre_enter: drawing.canvas.clear()
    
    #reseting time
    on_pre_enter: app.reset()

    #starting clock
    on_enter: app.start_clock()

    #changing pen to black
    on_pre_enter: drawing.change_color(black)

    # start saving the data
    on_pre_enter: drawing.start_callback()

    #saving data
    on_enter: drawing.save_data()

    #changing Spinner text to Black
    on_pre_enter: my_spinner.text = "Line Color: Black"

    #reset line width to 2
    on_pre_enter: my_spinner_2.text = "Line Width: 3 mm"

    # View Rey Figure
    on_pre_enter: root.display_image()

    FloatLayout:

        Image:
            id: viewImage
            #source: "reyFigure.png" # 
            size_hint: 0.4, 0.5
            pos_hint: {'x': 0.01, 'y': 0.28}

        CustLabel:
            id: instructions
            font_size: 50
            size_hint: 0.6, 0.07
            pos_hint: {'x': 0.2, 'y': 0.01}
            halign: 'center'
            valign: 'middle'

        DrawInput:
            id: drawing
            
        Button:       
            font_size: 40
            size_hint: 0.25, 0.05
            pos_hint: {"x": 0.75, "top": 1}
            text: "Finish"
            background_color: btn_color
            on_press: 
                drawing.save_image(drawing)
                drawing.stop_callback()
                drawing.count_figures()
                
            on_release: 
                drawing.switch_test_type()
                app.root.current = "between_trial"
                
    
        Button:
            id: clear
            text: 'Clear'
            background_color: btn_color
            font_size: 40
            size_hint: 0.25, 0.05
            pos_hint: {"x": 0, "top": 1}
            on_press: drawing.canvas.clear()

        Button:
            id: black
            text: 'Black'
            font_size: 0.001
            size_hint: 0.001, 0.001
            pos_hint: {"left":1,"bottom":1}
            color: 0, 0, 0, 1
            background_normal: ""
            background_color: 1, 1, 1, 1
            on_press: drawing.change_color(self)


        Spinner:
            id: my_spinner
            font_size: 40
            size_hint: 0.25, 0.05
            pos_hint: {"x":0.25,"top":1}
            text: "Line Color: Black"
            background_color: btn_color
            # values: ["Line Color: Black", "Line Color: Blue", "Line Color: Red"]
            values: ["Line Color: Black"]
            
            #background_normal: ""
            color:
                (0, 0, 0, 1) if my_spinner.text == "Line Color: Black" else (0, 0, 1, 1) if my_spinner.text == "Line Color: Blue" else (1, 0, 0, 1)
            #background_color:(0, 0, 0, .1) if my_spinner.text == "Black“ else (0, 0, 1, .1) if my_spinner.text == "Blue" else (1, 0, 0, .1)
            on_text:
                drawing.change_color(self)


        Spinner:
            id: my_spinner_2
            font_size: 40
            size_hint: 0.25, 0.05
            pos_hint: {"x":0.5,"top":1}
            # pos_hint: {"x":0.625,"bottom":1}
            text: "Line Width: 3 mm"
            background_color: btn_color
            # values: ["Line Width: 2 mm", "Line Width: 3 mm"]
            values: ["Line Width: 3 mm"]
            on_text:
                app.line_width = self.text
                drawing.change_width()



<BetweenTrialScreen>:
    name: "between_trial"

    between_trial_label: between_trial_label
    between_trial_button: between_trial_button

    on_pre_enter: root.change_text()

    GridLayout:
        cols:1

        #organise the window
        size: root.width, root.height
        padding: [400,200,400,200] # top, right, bottom, left
    
        Label:
            id: between_trial_label
            color: 1, 1, 1, 1
            font_size: 50
            size_hint: 0.5, 0.5
            text: ""
            halign: 'center'
            valign: 'middle'
            markup: True


        Button:
            id: between_trial_button
            text: 'Continue'
            background_color: btn_color
            font_size: 50
            size_hint: 0.5, 0.5
            on_press:
                root.close_application()
            on_release: 
                app.root.current = "drawing" if root.get_test_type() != 'Finished' else "main"
                



